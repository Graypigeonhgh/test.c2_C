#define _CRT_SECURE_NO_WARNINGS 1

#include<stdio.h>
#include<math.h>
int main()
{
	int n=0;
	int m=0;
	int r=0;
	scanf("%d,%d",&m,&n);
	while(r=m%n)
	{
		m=n;
		n=r;
	}
	printf("%d\n",n);
	return 0;
}


//打印100~200的素数
int main()
{
	int count=0;
	int i;
	for(i=100;i<=200;i++)
	{
		int j=0;
		for(j=2;j<i;j++)
		{
			if(i%j==0)//主要i在2~i-1范围内可以被整除，就不是素数
			{
				break;
			}
		}
		if(i==j)//说明i只能被1和它本身整除
		{
			count++;
			printf("%d\n",i);
		}
	}
	printf("\ncount=%d",count);
}


//优化后
int main()
{
	int i=0;
	int count=0;
	for(i=101;i<=200;i+=2)//100~200中，偶数不可能是素数
	{
		int j=0;
		for(j=2;j<=sqrt(i);j++)//sqrt(i):i的开平方
		{
			if(i%j==0)
			{
				break;
			}
		}
		if(j>sqrt(i))
		{
			count++;
			printf("%d\n",i);
		}
	}
	printf("\ncount=%d\n",count);
	return 0;
}


//计算1/1-1/2+1/3-1/4+1/5......+1/99_1/00
int main()
{
	int i=0;
	double sum=0.0;
	int flag=1;
	for(i=1;i<=100;i++)
	{
		sum+=flag*1.0/i;
		flag=-flag;
	}
	printf("%lf\n",sum);
	return 0;
}


//求10个数中的最大值
int main()
{
	int arr[]={-1,-2,-3,-4,-5,-6,-7,-8,-9,-10};
	int max=arr[0];
	int i=0;
	int sz=sizeof(arr)/sizeof(arr[0]);
	for(i=1;i<sz;i++)
	{
		if(arr[i]>max)
		{
			max=arr[i];
		}
	}
	printf("max=%d\n",max);
	return 0;
}