#define _CRT_SECURE_NO_WARNINGS 1
#include<stdio.h>

//求第n个斐波那契数
int Fib(int n)
{
	if(n<=2)
	{
		return 1;
	}
	else
	{
		return Fib(n-1)+Fib(n-2);//一直在重复，导致效率低，速度慢（此时递归并不是最高效的方法）
	}
}

int main()
{
	int n=0;
	int ret=0;
	scanf("%d",&n);
	ret=Fib(n);
	printf("ret=%d\n",ret);
	return 0;
}

int Fib(int n)
{
	int a=1;
	int b=1;
	int c=0;
	while(n>2)
	{
		c=a+b;
		a=b;
		b=c;//向右移
		n--;//求n时的动作执行次数为（n-1），当n<=2时，跳出循环
	}
	return c;
}

int main()
{
	int n=0;
	int ret=0;
	scanf("%d",&n);
	ret=Fib(n);
	printf("%d",ret);
	return 0;
}